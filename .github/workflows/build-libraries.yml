name: Build Library Dependency Artifacts

on:
    release:
        types:
            - published
    workflow_dispatch:

jobs:
    build-release-artifacts:
        name: "Build Library Dependency Artifacts"
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - "8.1"
                operating-system:
                    - "ubuntu-latest"
                    - "macos-latest"
                library:
                    # Commented out libraries are not yet supported
                    - brotli
                    - bzip2
                    - curl
                    - freetype
                    #- glfw
                    - gmp
                    - icu
                    - imagemagick
                    - libavif
                    - libevent
                    #- libffi
                    - libiconv
                    - libjpeg
                    #- libmcrypt
                    #- libmemcached
                    - libpng
                    - libsodium
                    - libssh2
                    - libwebp
                    - libxml2
                    - libxslt
                    - libyaml
                    - libzip
                    - mcrypt
                    - ncurses
                    - nghttp2
                    - onig
                    - openssl
                    #- pkg-config
                    - postgresql
                    #- pthreads4w
                    - readline
                    - snappy
                    - sqlite
                    - xz
                    - zlib
                    - zstd

        steps:
            - name: "Checkout"
              uses: "actions/checkout@v4"

            - name: "Install PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  coverage: none
                  tools: composer:v2
                  php-version: "${{ matrix.php-version }}"
                  ini-values: memory_limit=-1

            - name: "Get Composer Cache Directory"
              id: composer-cache
              run: |
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: "Cache Composer dependencies"
              uses: "actions/cache@v3"
              with:
                  path: "${{ steps.composer-cache.outputs.dir }}"
                  key: "php-${{ matrix.php-version }}-locked-composer-${{ hashFiles('**/composer.lock') }}"
                  restore-keys: |
                      php-${{ matrix.php-version }}-locked-composer-

            - name: "Install locked dependencies"
              run: "composer install --no-interaction --no-progress"

            # Cache downloaded source
            - name: OS type
              id: os-type
              run: |
                  OS=""
                  if [ "${{ matrix.operating-system }}" = "ubuntu-latest" ]; then
                      OS="linux-x86_64"
                  elif [ "${{ matrix.operating-system }}" = "macos-latest" ]; then
                      OS="macos-x86_64"
                  fi
                  echo "OS=$OS" >> $GITHUB_ENV

            - id: cache-download
              uses: actions/cache@v3
              with:
                  path: downloads
                  key: php-${{ matrix.php-version }}-dependencies

            # If there's no dependencies cache, fetch sources
            - if: steps.cache-download.outputs.cache-hit != 'true'
              name: "Download sources"
              run: bin/spc download --with-php=${{ matrix.php-version }} --all

            - name: "Build library: ${{ matrix.library }}"
              run: |
                  SPC_USE_SUDO=yes bin/spc doctor --auto-fix
                  bin/spc build:libs ${{ matrix.library }} --include-suggested

            - name: Upload binaries to release
              uses: softprops/action-gh-release@v1
              if: ${{startsWith(github.ref, 'refs/tags/') }}
              with:
                  files: ${{ env.filename }}

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: php-${{ matrix.php-version }}-${{ matrix.library }}-${{ env.OS }}
                  path: |
                      buildroot/include/
                      buildroot/lib/
                  if-no-files-found: error
