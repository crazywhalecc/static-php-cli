name: CI

on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
#  linux:
#    runs-on: ubuntu-latest
#    steps:
#      - run: sudo apt-get install ninja-build
#      - run: ninja --version

# When windows support is ready, we can use this
#  windows:
#    runs-on: windows-latest
#    steps:
#      - run: choco install ninja
#      - run: ninja --version

  mac:
    strategy:
      matrix:
        php_version: [ "8.1", "8.2" ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      
      - run: brew install automake gzip
      
#      - id: cache-composer-deps
#        uses: actions/cache@v3
#        with:
#          path: vendor
#          key: composer-dependencies
#      - if: steps.cache-composer-deps.outputs.cache-hit != 'true'
#        run: composer update
      - run: composer update
      
#      - id: cache-build-deps
#        uses: actions/cache@v3
#        with:
#          path: source
#          key: php-${{ matrix.php_version }}-dependencies
#      - if: steps.cache-build-deps.outputs.cache-hit != 'true'
#        run: ./bin/spc fetch --with-php=${{ matrix.php_version }} --all
      - run: ./bin/spc fetch --with-php=${{ matrix.php_version }} --all --debug
      
      - run: ./bin/spc build ftp,curl,mbstring,pcntl,session,pdo,sqlite3,pdo_sqlite,tokenizer,filter,fileinfo,dom,xml,simplexml,bcmath --debug
      
      - uses: actions/upload-artifact@v3
        with:
          name: php-${{ matrix.php_version }}
          path: buildroot/bin/php
